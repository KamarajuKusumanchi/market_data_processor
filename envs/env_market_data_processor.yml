# To create this environment
#   conda env create -f <filename>
# To update the environment
#   conda env update -f <filename>
# To export the environment
#   conda env export
# To remove the environment
#   conda env remove --name <env_name>

name: market_data_processor
channels:
  - defaults
dependencies:
  - python=3.12
    # The 'ME' offset does not work in pandas 2.1.4 but works in 2.2.2
    # See also: https://pandas.pydata.org/docs/whatsnew/v2.2.0.html#deprecate-aliases-m-q-y-etc-in-favour-of-me-qe-ye-etc-for-offsets
  - pandas >= 2.2.2
  - pycodestyle
  - ipython
    # "jupyter" comes from the jupyter_core pacakge, and jupyter-lab comes from
    # the jupyterlab package. "jupyter-lab" replaces "jupyter notebook". Use
    # the former instead of the latter.
  - jupyterlab
  - pytest
  - pip
    # pandas -> dataframe -> plot() requires matplotlib
  - matplotlib
  - black
    # csvkit is useful for working with csv files.
  - csvkit
    # BeautifulSoup4, html5lib, lxml are needed for read_html(). But they are
    # listed as optional dependencies.  To be specific, BeautifulSoup4 can work
    # with either of html5lib or lxml or both.
    # Per https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html#io-html-gotchas
    # html5lib is slower but more accurate; lxml is faster but less accurate.
    # Prefer html5lib whenever possible but install both parsers.
    # For a full list of optional dependencies of pandas, see
    # https://pandas.pydata.org/pandas-docs/stable/getting_started/install.html#optional-dependencies
  - BeautifulSoup4
  - html5lib
  - lxml
    # DataFrame.to_markdown() can pretty print dataframes. It requires the
    # tabulate package per
    # https://pandas.pydata.org/pandas-docs/stable/getting_started/install.html#optional-dependencies
  - tabulate
    # PyYAML only supports YAML 1.1 spec. ruamel.yaml supports yaml 1.2 spec and
    # is an update of PyYAML.
    # See https://yaml.org/ for more info.
  - ruamel.yaml
    # pdfannots outputs annotations in markdown format. Use pandoc to convert them into zimwiki format.
    # pandoc is used by jupyter-lab to export ipynb file to pdf
  - pandoc
    # yfinance library is the easiest and fastest way to download historical
    # stock prices. Asof 2024-07-04, it is not available in the defaults
    # channel. So pull it from conda-forge
    #
    # With yfinance 0.2.26, I encountered https://github.com/ranaroussi/yfinance/issues/1592
    # With yfinance 0.2.33, I encountered https://github.com/ranaroussi/yfinance/issues/1894
  - conda-forge::yfinance >= 0.2.34
    # Asof 2023-06-29, conda-forge has streamlit version 1.24.0 (the latest
    # version) but the defaults channel has version 1.16.0.
    # To pull streamlit from conda-forge, use
    # - conda-forge::streamlit
    # But while creating the environment with both defaults and conda-forge
    # channels on a machine running Debian stable (bookwork) with 1 GB RAM, 1
    # core, I encounted
    #   Collecting package metadata (repodata.json): - Killed
    # So, decided to only use the defaults channel for now for streamlit.
  - streamlit
  - pip:
    - fake-useragent
      # Need finvizfinance >= 0.14.6rc1 as it fixes
      # https://github.com/lit26/finvizfinance/issues/74
    - finvizfinance >= 0.14.6rc1
      # Jupytext is useful to version control jupyter notebooks.
    - jupytext
      # ruamel.yaml.cmd gives a commandline utility called yaml
      # Ref: https://yaml.readthedocs.io/en/latest/install.html
    - ruamel.yaml.cmd
      # The TWS python api is available as a zip file at
      # https://interactivebrokers.github.io/# .
      # Use $github/market_data_processor/src/scripts/build_twsapi.sh to create
      # a wheel from it. If the wheel is stored in, say,
      # /home/rajulocal/software/dist/ibapi-10.22.1-py3-none-any.whl , you can
      # pull that in using something like
      # - file:///home/rajulocal/software/dist/ibapi-10.22.1-py3-none-any.whl
      # but this will not be portable when you move to a different machine. A
      # better approach is to run
      #   % pip config set global.find-links file:///home/rajulocal/software/dist
      # which will modify pip.conf as
      #   % cat ~/.config/pip/pip.conf
      #  [global]
      #  find-links = file:///home/rajulocal/software/dist
      # and then specify ibapi as a normal pip dependency.
    - ibapi
      # Need pandas-datareader >= 0.10.0 as it has fixed yahoo reader which now
      # requires headers.
      # Ref:- https://github.com/pydata/pandas-datareader/releases/tag/v0.10.0
      # - pandas-datareader >= 0.10
      #
      # Per https://github.com/pydata/pandas-datareader/releases , asof
      # 2023-11-11, the latest version of pandas-datareader is 0.10.0 . But
      # pandas_datareader.nasdaq_trader.get_nasdaq_symbols() in this version
      # does not work due to
      # https://github.com/pydata/pandas-datareader/issues/970 .
      # One way to work around it is to use pandas 1.5.3 as described in the
      # bug report.
      # But this bug is fixed in the main branch using
      # https://github.com/pydata/pandas-datareader/pull/968/files .
      # However, @bashtage (Kevin Sheppard) is hesitant to make a new release
      # of pandas-datareader since many (most?) of the readers are currently
      # broken (see https://github.com/pydata/pandas-datareader/issues/977 for
      # more details). So, in the end, I decided to use the lastest version
      # from github directly.
    - git+https://github.com/pydata/pandas-datareader
      # Initially, I used
      # - finance-dl
      # which pulled finance-dl 1.3.3 (latest release asof 2023-12-28). With
      # it, I am getting
      # % python -m finance_dl.cli --config-module finance_dl_config --config schwab
      # ...
      #     File "/opt/rajulocal/miniconda3/envs/market_data_processor/lib/python3.12/site-packages/finance_dl/scrape_lib.py", line 176, in __init__
      #       self.driver = driver_class(
      #                     ^^^^^^^^^^^^^
      #   TypeError: WebDriver.__init__() got an unexpected keyword argument 'executable_path'
      #      File "/opt/rajulocal/miniconda3/envs/market_data_processor/lib/python3.12/site-packages/finance_dl/scrape_lib.py", line 176, in __init__
      #
      # To get around it, I tried using the latest version from github directly.
      # - git+https://github.com/jbms/finance-dl
      #
      # That is giving
      # % python -m finance_dl.cli --config-module finance_dl_config --config schwab
      #   File "/opt/rajulocal/miniconda3/envs/market_data_processor/lib/python3.12/site-packages/finance_dl/scrape_lib.py", line 146, in __init__
      #     chrome_options.binary_location = os.getenv("CHROMEDRIVER_CHROME_BINARY")
      #     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      #   File "/opt/rajulocal/miniconda3/envs/market_data_processor/lib/python3.12/site-packages/selenium/webdriver/chromium/options.py", line 52, in binary_location
      #     raise TypeError(self.BINARY_LOCATION_ERROR)
      # TypeError: Binary Location Must be a String
      #
      # I reported the above error as https://github.com/jbms/finance-dl/issues/93
    - git+https://github.com/jbms/finance-dl
